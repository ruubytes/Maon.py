#!/bin/bash
echo '''
                     __          __           
   _______  ____  __/ /_  __  __/ /____  _____
  / ___/ / / / / / / __ \/ / / / __/ _ \/ ___/
 / /  / /_/ / /_/ / /_/ / /_/ / /_/  __(__  ) 
/_/   \__,_/\__,_/_.___/\__, /\__/\___/____/  
                       /____/                 
'''
# Hop into Maon's directory to keep things simple
SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
if ! [[ ./ -ef $SCRIPT_DIR ]]; then
  cd "$SCRIPT_DIR"
fi

# Check if python3-pip, ffmpeg, opus-tools are installed
installMe=""
declare -a packages=("python3-pip" "ffmpeg" "opus-tools")
for package in "python3-pip" "ffmpeg" "opus-tools"; do
  if ! [[ $(dpkg -s "$package" 2> /dev/null | grep "install ok installed") ]]; then
    installMe+=" $package"
  fi
done

if ! [ -z "$installMe" ]; then
  echo "Missing$installMe dependencies."
  echo -e "You can install the dependencies with: \n\n    sudo apt-get install$installMe -y \n"
  exit 0
fi

# Install python dependencies that are not installed
installed=$(pip list)
installMePip=""
for package in "pip" "aioconsole" "discord.py" "psutil" "PyNaCl" "requests" "simplejson" "tinytag" "yt-dlp"; do
  if ! [[ $(echo "$installed" | grep "$package") ]]; then
    installMePip+=" $package"
  fi
done
if ! [ -z "$installMePip" ]; then
  read -p "Install required python dependencies? [Y/N]: " YN
  if [[ $YN == "Y" || $YN == "y" || $YN == "Yes" || $YN == "yes" ]]; then
    python3 -m pip install "$installMePip"
  else
    exit 0
  fi
fi

# Update python dependencies
echo "Looking for updates..."
outdated=$(pip list --outdated)
updateMePip=""
for package in "pip" "aioconsole" "discord.py" "psutil" "PyNaCl" "requests" "simplejson" "tinytag" "yt-dlp"; do
  if [[ $(echo "$outdated" | grep "$package") ]]; then
    updateMePip+=" $package"
  fi
done
if ! [ -z "$updateMePip" ]; then
  python3 -m pip install -U "$updateMePip"
fi

# Update maon
#git pull origin develop
echo "Everything up-to-date."

# Check if .env exists
# if yes, check if the token and id variables exist
  # if yes, load environment variables from .env
# if not, prompt for token and owner id, create .env and export variables

# Run maon
